{"version":3,"file":"bib-avis.cjs","sources":["../node_modules/lit-html/development/directive.js","../node_modules/lit-html/development/directives/unsafe-html.js","../node_modules/idb/build/index.js","../src/components/bib-avis/bib-avis.js","../src/icons/close_FILL0_wght400_GRAD0_opsz24.svg?raw"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nexport const PartType = {\n    ATTRIBUTE: 1,\n    CHILD: 2,\n    PROPERTY: 3,\n    BOOLEAN_ATTRIBUTE: 4,\n    EVENT: 5,\n    ELEMENT: 6,\n};\n/**\n * Creates a user-facing directive function from a Directive class. This\n * function has the same parameters as the directive's render() method.\n */\nexport const directive = (c) => (...values) => ({\n    // This property needs to remain unminified.\n    ['_$litDirective$']: c,\n    values,\n});\n/**\n * Base class for creating custom directives. Users should extend this class,\n * implement `render` and/or `update`, and then pass their subclass to\n * `directive`.\n */\nexport class Directive {\n    constructor(_partInfo) { }\n    // See comment in Disconnectable interface for why this is a getter\n    get _$isConnected() {\n        return this._$parent._$isConnected;\n    }\n    /** @internal */\n    _$initialize(part, parent, attributeIndex) {\n        this.__part = part;\n        this._$parent = parent;\n        this.__attributeIndex = attributeIndex;\n    }\n    /** @internal */\n    _$resolve(part, props) {\n        return this.update(part, props);\n    }\n    update(_part, props) {\n        return this.render(...props);\n    }\n}\n//# sourceMappingURL=directive.js.map","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport { nothing, noChange } from '../lit-html.js';\nimport { directive, Directive, PartType } from '../directive.js';\nconst HTML_RESULT = 1;\nexport class UnsafeHTMLDirective extends Directive {\n    constructor(partInfo) {\n        super(partInfo);\n        this._value = nothing;\n        if (partInfo.type !== PartType.CHILD) {\n            throw new Error(`${this.constructor.directiveName}() can only be used in child bindings`);\n        }\n    }\n    render(value) {\n        if (value === nothing || value == null) {\n            this._templateResult = undefined;\n            return (this._value = value);\n        }\n        if (value === noChange) {\n            return value;\n        }\n        if (typeof value != 'string') {\n            throw new Error(`${this.constructor.directiveName}() called with a non-string value`);\n        }\n        if (value === this._value) {\n            return this._templateResult;\n        }\n        this._value = value;\n        const strings = [value];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        strings.raw = strings;\n        // WARNING: impersonating a TemplateResult like this is extremely\n        // dangerous. Third-party directives should not do this.\n        return (this._templateResult = {\n            // Cast to a known set of integers that satisfy ResultType so that we\n            // don't have to export ResultType and possibly encourage this pattern.\n            // This property needs to remain unminified.\n            ['_$litType$']: this.constructor\n                .resultType,\n            strings,\n            values: [],\n        });\n    }\n}\nUnsafeHTMLDirective.directiveName = 'unsafeHTML';\nUnsafeHTMLDirective.resultType = HTML_RESULT;\n/**\n * Renders the result as HTML, rather than text.\n *\n * The values `undefined`, `null`, and `nothing`, will all result in no content\n * (empty string) being rendered.\n *\n * Note, this is unsafe to use with any user-provided input that hasn't been\n * sanitized or escaped, as it may lead to cross-site-scripting\n * vulnerabilities.\n */\nexport const unsafeHTML = directive(UnsafeHTMLDirective);\n//# sourceMappingURL=unsafe-html.js.map","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst transactionDoneMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(this.request);\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nconst advanceMethodProps = ['continue', 'continuePrimaryKey', 'advance'];\nconst methodMap = {};\nconst advanceResults = new WeakMap();\nconst ittrProxiedCursorToOriginalProxy = new WeakMap();\nconst cursorIteratorTraps = {\n    get(target, prop) {\n        if (!advanceMethodProps.includes(prop))\n            return target[prop];\n        let cachedFunc = methodMap[prop];\n        if (!cachedFunc) {\n            cachedFunc = methodMap[prop] = function (...args) {\n                advanceResults.set(this, ittrProxiedCursorToOriginalProxy.get(this)[prop](...args));\n            };\n        }\n        return cachedFunc;\n    },\n};\nasync function* iterate(...args) {\n    // tslint:disable-next-line:no-this-assignment\n    let cursor = this;\n    if (!(cursor instanceof IDBCursor)) {\n        cursor = await cursor.openCursor(...args);\n    }\n    if (!cursor)\n        return;\n    cursor = cursor;\n    const proxiedCursor = new Proxy(cursor, cursorIteratorTraps);\n    ittrProxiedCursorToOriginalProxy.set(proxiedCursor, cursor);\n    // Map this double-proxy back to the original, so other cursor methods work.\n    reverseTransformCache.set(proxiedCursor, unwrap(cursor));\n    while (cursor) {\n        yield proxiedCursor;\n        // If one of the advancing methods was not called, call continue().\n        cursor = await (advanceResults.get(proxiedCursor) || cursor.continue());\n        advanceResults.delete(proxiedCursor);\n    }\n}\nfunction isIteratorProp(target, prop) {\n    return ((prop === Symbol.asyncIterator &&\n        instanceOfAny(target, [IDBIndex, IDBObjectStore, IDBCursor])) ||\n        (prop === 'iterate' && instanceOfAny(target, [IDBIndex, IDBObjectStore])));\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get(target, prop, receiver) {\n        if (isIteratorProp(target, prop))\n            return iterate;\n        return oldTraps.get(target, prop, receiver);\n    },\n    has(target, prop) {\n        return isIteratorProp(target, prop) || oldTraps.has(target, prop);\n    },\n}));\n\nexport { deleteDB, openDB, unwrap, wrap };\n","import { Task } from '@lit/task'\nimport { LitElement, html, css, unsafeCSS } from 'lit'\nimport { unsafeHTML } from 'lit/directives/unsafe-html.js'\nimport { openDB } from 'idb'\nimport { name as PKG_NAME } from '../../../package.json'\nimport closeIcon from '../../icons/close_FILL0_wght400_GRAD0_opsz24.svg?raw'\nimport bibAvisStyles from './bib-avis.scss?inline'\n\nfunction isEmpty(node) {\n  return node.textContent.trim() === \"\"\n}\n\nasync function hash(obj) {\n  const utf8 = new TextEncoder().encode(JSON.stringify(obj))\n  const hashBuffer = await crypto.subtle.digest('SHA-256', utf8)\n  const hashArray = Array.from(new Uint8Array(hashBuffer))\n  const hashHex = hashArray\n    .map((bytes) => bytes.toString(16).padStart(2, '0'))\n    .join('')\n  return hashHex\n}\n\n/**\n * Un avis\n * Affiche un avis\n */\nexport class BibAvis extends LitElement {\n  static properties = {\n    service: {\n      type: String\n    },\n    contexte: {\n      type: String,\n      default: 'site-web'\n    },\n    niveau: {\n      type: String\n    },\n    boutonFermer: {\n      type: Boolean,\n      attribute: 'bouton-fermer'\n    },\n    message: {\n      state: true\n    }\n  }\n\n  static styles = [\n    css`${unsafeCSS(bibAvisStyles)}`,\n    css`\n    `\n  ]\n\n  #avis\n  #db\n\n  constructor() {\n    super()\n\n    this.#avis = null\n    this.service = 'https://avis.bib.umontreal.ca'\n    this.contexte = 'site-web-dev'\n    this.niveau = 'important'\n    this.boutonFermer = false\n  }\n\n  #getAvis() {\n    return new Task(this, {\n      task: async ([service, contexte, niveau], { signal }) => {\n\n        const doGetAvis = new Promise(async (resolve, reject) => {\n          if (!isEmpty(this)) {\n            return resolve({ isLocal: true, message: this.innerHTML.split(/<!--\\?lit\\$\\d+\\$-->/).join('') })\n          }\n\n          const url = new URL(`${contexte}/${niveau}`, service)\n          const response = await fetch(url, {\n            headers: {\n              \"Accept\": \"application/json\",\n            },\n            signal\n          })\n\n          if (!response.ok) {\n            return reject(new Error(response.status))\n          }\n\n          const { message } = await response.json()\n\n          resolve({ isLocal: false, message })\n        })\n\n        try {\n          const data = await doGetAvis\n          await this.#processAvis(data)\n        } catch (error) {\n          console.error('[#getAvis] An error occured: %o', error)\n        }\n\n        return data\n      },\n      args: () => [this.service, this.contexte, this.niveau]\n    })\n  }\n\n  async #processAvis(avis) {\n    if (!avis.message) {\n      this.setMessage(null)\n      return\n    }\n\n    if (!('indexedDB' in window)) {\n      this.setMessage(avis.message)\n      return\n    }\n\n    const db = this.#db = await openDB(PKG_NAME, 1, {\n      upgrade(db) {\n        // Checks if the object store exists:\n        if (!db.objectStoreNames.contains('avis')) {\n          db.createObjectStore('avis')\n        }\n      }\n    })\n\n    try {\n      const id = await hash(avis)\n      const storedAvis = await db.get('avis', id)\n      if (storedAvis) {\n        if (!storedAvis.hidden) {\n          // Delete old entries\n          await db.delete('avis', id)\n          this.#show(storedAvis)\n        }\n      } else {\n        this.#show(avis)\n      }\n    } catch (error) {\n      console.error('Something went wrong with indexedDB: %o', error)\n      this.setMessage(avis.message)\n    }\n  }\n\n  async #show(avis) {\n    this.setMessage(avis)\n    if (this.#db) {\n      const id = await hash(avis)\n      await this.#db.add('avis', { ...avis, hidden: false }, id)\n    }\n  }\n\n  async #hide() {\n    const id = await hash(this.#avis)\n    await this.#db.put('avis', { ...this.#avis, hidden: true }, id)\n    this.#avis = null\n    this.requestUpdate()\n  }\n\n  connectedCallback() {\n    super.connectedCallback()\n    this.#getAvis()\n  }\n\n  #onBtnFermerClick() {\n    this.#hide()\n  }\n\n  _renderBoutonFermer() {\n    return this.boutonFermer ? html`<button class=\"btn-close\" aria-label=\"Fermer\" @click=\"${this.#onBtnFermerClick}\">${unsafeHTML(closeIcon)}</button>` : null\n  }\n\n  _avisTask = new Task(this, {\n    task: async ([service, contexte, niveau], { signal }) => {\n      const url = new URL(`${contexte}/${niveau}`, service)\n      const response = await fetch(url, {\n        headers: {\n          \"Accept\": \"application/json\",\n          // 'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        signal\n      })\n      if (!response.ok) {\n        throw new Error(response.status)\n      }\n      return response.json()\n    },\n    args: () => [this.service, this.contexte, this.niveau]\n  })\n\n  // _renderRemote() {\n  //   return this._avisTask.render({\n  //     pending: () => html``,\n  //     complete: (avis) => this._renderAvis(avis.message),\n  //     error: e => {\n  //       console.error('An error occured while rendering _avisTask: %o', e)\n  //       return null\n  //     }\n  //   })\n  // }\n\n  render() {\n    return this.#avis?.message ? html`<aside class=\"container\"><div class=\"inner\"><div class=\"message\">${unsafeHTML(this.#avis.message)}</div>${this._renderBoutonFermer()}</div></aside>` : null\n  }\n\n  setMessage(message) {\n    this.#avis = typeof message === 'string' ? { message, isLocal: true } : message\n  }\n}\n\ncustomElements.define('bib-avis', BibAvis)","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" height=\\\"24\\\" viewBox=\\\"0 -960 960 960\\\" width=\\\"24\\\"><path d=\\\"M480-424 284-228q-11 11-28 11t-28-11q-11-11-11-28t11-28l196-196-196-196q-11-11-11-28t11-28q11-11 28-11t28 11l196 196 196-196q11-11 28-11t28 11q11 11 11 28t-11 28L536-480l196 196q11 11 11 28t-11 28q-11 11-28 11t-28-11L480-424Z\\\"/></svg>\""],"names":["Directive","constructor","_partInfo","_$isConnected","this","_$parent","_$initialize","part","parent","attributeIndex","__part","__attributeIndex","_$resolve","props","update","_part","render","UnsafeHTMLDirective","partInfo","super","_value","nothing","type","Error","directiveName","value","_templateResult","noChange","strings","raw","_$litType$","resultType","values","unsafeHTML","c","_$litDirective$","e","instanceOfAny","object","constructors","some","idbProxyableTypes","cursorAdvanceMethods","transactionDoneMap","WeakMap","transformCache","reverseTransformCache","idbProxyTraps","get","target","prop","receiver","IDBTransaction","objectStoreNames","objectStore","wrap","set","has","replaceTraps","callback","IDBRequest","request","promise","Promise","resolve","reject","unlisten","removeEventListener","success","error","result","addEventListener","newValue","func","IDBCursor","prototype","advance","continue","continuePrimaryKey","includes","args","apply","unwrap","tx","done","complete","DOMException","IDBDatabase","IDBObjectStore","IDBIndex","Proxy","readMethods","writeMethods","cachedMethods","Map","getMethod","targetFuncName","replace","useIndex","isWrite","method","async","storeName","transaction","store","index","shift","all","oldTraps","advanceMethodProps","methodMap","advanceResults","ittrProxiedCursorToOriginalProxy","cursorIteratorTraps","cachedFunc","iterate","cursor","openCursor","proxiedCursor","delete","isIteratorProp","Symbol","asyncIterator","hash","obj","utf8","TextEncoder","encode","JSON","stringify","hashBuffer","crypto","subtle","digest","Array","from","Uint8Array","map","bytes","toString","padStart","join","BibAvis","LitElement","__privateAdd","_n","_s","_r","_i","_o","avis","db","_avisTask","Task","task","service","contexte","niveau","signal","url","URL","response","fetch","headers","Accept","s","ok","status","json","boutonFermer","connectedCallback","getAvis","_renderBoutonFermer","html","message","setMessage","isLocal","WeakSet","n_fn","doGetAvis","textContent","trim","innerHTML","split","data","processAvis","s_fn","window","name","version","blocked","upgrade","blocking","terminated","indexedDB","open","openPromise","event","oldVersion","newVersion","then","catch","contains","createObjectStore","id","storedAvis","hidden","console","r_fn","show","add","i_fn","hide","put","requestUpdate","o_fn","onBtnFermerClick","static","String","default","Boolean","attribute","state","css","unsafeCSS","customElements","define"],"mappings":"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","x_google_ignoreList":[0,1,2]}