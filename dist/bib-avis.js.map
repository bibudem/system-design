{"version":3,"file":"bib-avis.js","sources":["../node_modules/lit-html/development/directive.js","../node_modules/lit-html/development/directives/unsafe-html.js","../node_modules/idb/build/index.js","../src/components/bib-avis/bib-avis.js","../src/icons/close_FILL0_wght400_GRAD0_opsz24.svg?raw"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nexport const PartType = {\n    ATTRIBUTE: 1,\n    CHILD: 2,\n    PROPERTY: 3,\n    BOOLEAN_ATTRIBUTE: 4,\n    EVENT: 5,\n    ELEMENT: 6,\n};\n/**\n * Creates a user-facing directive function from a Directive class. This\n * function has the same parameters as the directive's render() method.\n */\nexport const directive = (c) => (...values) => ({\n    // This property needs to remain unminified.\n    ['_$litDirective$']: c,\n    values,\n});\n/**\n * Base class for creating custom directives. Users should extend this class,\n * implement `render` and/or `update`, and then pass their subclass to\n * `directive`.\n */\nexport class Directive {\n    constructor(_partInfo) { }\n    // See comment in Disconnectable interface for why this is a getter\n    get _$isConnected() {\n        return this._$parent._$isConnected;\n    }\n    /** @internal */\n    _$initialize(part, parent, attributeIndex) {\n        this.__part = part;\n        this._$parent = parent;\n        this.__attributeIndex = attributeIndex;\n    }\n    /** @internal */\n    _$resolve(part, props) {\n        return this.update(part, props);\n    }\n    update(_part, props) {\n        return this.render(...props);\n    }\n}\n//# sourceMappingURL=directive.js.map","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport { nothing, noChange } from '../lit-html.js';\nimport { directive, Directive, PartType } from '../directive.js';\nconst HTML_RESULT = 1;\nexport class UnsafeHTMLDirective extends Directive {\n    constructor(partInfo) {\n        super(partInfo);\n        this._value = nothing;\n        if (partInfo.type !== PartType.CHILD) {\n            throw new Error(`${this.constructor.directiveName}() can only be used in child bindings`);\n        }\n    }\n    render(value) {\n        if (value === nothing || value == null) {\n            this._templateResult = undefined;\n            return (this._value = value);\n        }\n        if (value === noChange) {\n            return value;\n        }\n        if (typeof value != 'string') {\n            throw new Error(`${this.constructor.directiveName}() called with a non-string value`);\n        }\n        if (value === this._value) {\n            return this._templateResult;\n        }\n        this._value = value;\n        const strings = [value];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        strings.raw = strings;\n        // WARNING: impersonating a TemplateResult like this is extremely\n        // dangerous. Third-party directives should not do this.\n        return (this._templateResult = {\n            // Cast to a known set of integers that satisfy ResultType so that we\n            // don't have to export ResultType and possibly encourage this pattern.\n            // This property needs to remain unminified.\n            ['_$litType$']: this.constructor\n                .resultType,\n            strings,\n            values: [],\n        });\n    }\n}\nUnsafeHTMLDirective.directiveName = 'unsafeHTML';\nUnsafeHTMLDirective.resultType = HTML_RESULT;\n/**\n * Renders the result as HTML, rather than text.\n *\n * The values `undefined`, `null`, and `nothing`, will all result in no content\n * (empty string) being rendered.\n *\n * Note, this is unsafe to use with any user-provided input that hasn't been\n * sanitized or escaped, as it may lead to cross-site-scripting\n * vulnerabilities.\n */\nexport const unsafeHTML = directive(UnsafeHTMLDirective);\n//# sourceMappingURL=unsafe-html.js.map","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst transactionDoneMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(this.request);\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nconst advanceMethodProps = ['continue', 'continuePrimaryKey', 'advance'];\nconst methodMap = {};\nconst advanceResults = new WeakMap();\nconst ittrProxiedCursorToOriginalProxy = new WeakMap();\nconst cursorIteratorTraps = {\n    get(target, prop) {\n        if (!advanceMethodProps.includes(prop))\n            return target[prop];\n        let cachedFunc = methodMap[prop];\n        if (!cachedFunc) {\n            cachedFunc = methodMap[prop] = function (...args) {\n                advanceResults.set(this, ittrProxiedCursorToOriginalProxy.get(this)[prop](...args));\n            };\n        }\n        return cachedFunc;\n    },\n};\nasync function* iterate(...args) {\n    // tslint:disable-next-line:no-this-assignment\n    let cursor = this;\n    if (!(cursor instanceof IDBCursor)) {\n        cursor = await cursor.openCursor(...args);\n    }\n    if (!cursor)\n        return;\n    cursor = cursor;\n    const proxiedCursor = new Proxy(cursor, cursorIteratorTraps);\n    ittrProxiedCursorToOriginalProxy.set(proxiedCursor, cursor);\n    // Map this double-proxy back to the original, so other cursor methods work.\n    reverseTransformCache.set(proxiedCursor, unwrap(cursor));\n    while (cursor) {\n        yield proxiedCursor;\n        // If one of the advancing methods was not called, call continue().\n        cursor = await (advanceResults.get(proxiedCursor) || cursor.continue());\n        advanceResults.delete(proxiedCursor);\n    }\n}\nfunction isIteratorProp(target, prop) {\n    return ((prop === Symbol.asyncIterator &&\n        instanceOfAny(target, [IDBIndex, IDBObjectStore, IDBCursor])) ||\n        (prop === 'iterate' && instanceOfAny(target, [IDBIndex, IDBObjectStore])));\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get(target, prop, receiver) {\n        if (isIteratorProp(target, prop))\n            return iterate;\n        return oldTraps.get(target, prop, receiver);\n    },\n    has(target, prop) {\n        return isIteratorProp(target, prop) || oldTraps.has(target, prop);\n    },\n}));\n\nexport { deleteDB, openDB, unwrap, wrap };\n","import { Task } from '@lit/task'\nimport { LitElement, html, css, unsafeCSS } from 'lit'\nimport { unsafeHTML } from 'lit/directives/unsafe-html.js'\nimport { openDB } from 'idb'\nimport closeIcon from '../../icons/close_FILL0_wght400_GRAD0_opsz24.svg?raw'\nimport bibAvisStyles from './bib-avis.scss?inline'\n\nfunction isEmpty(node) {\n  return node.textContent.trim() === \"\"\n}\n\nasync function hash(obj) {\n  const utf8 = new TextEncoder().encode(JSON.stringify(obj))\n  const hashBuffer = await crypto.subtle.digest('SHA-256', utf8)\n  const hashArray = Array.from(new Uint8Array(hashBuffer))\n  const hashHex = hashArray\n    .map((bytes) => bytes.toString(16).padStart(2, '0'))\n    .join('')\n  return hashHex\n}\n\n/**\n * Un avis\n * Affiche un avis\n */\nexport class BibAvis extends LitElement {\n  static properties = {\n    service: {\n      type: String\n    },\n    contexte: {\n      type: String,\n      default: 'site-web'\n    },\n    niveau: {\n      type: String\n    },\n    boutonFermer: {\n      type: Boolean,\n      attribute: 'bouton-fermer'\n    },\n    message: {\n      state: true\n    }\n  }\n\n  static styles = [\n    css`${unsafeCSS(bibAvisStyles)}`,\n    css`\n    `\n  ]\n\n  #avis\n  #db\n\n  constructor() {\n    super()\n\n    this.#avis = null\n    this.service = 'https://avis.bib.umontreal.ca'\n    this.contexte = 'site-web-dev'\n    this.niveau = 'important'\n    this.boutonFermer = false\n  }\n\n  #getAvis() {\n    return new Task(this, {\n      task: async ([service, contexte, niveau], { signal }) => {\n        console.log('[#getAvis] is empty? %o', isEmpty(this))\n\n        const doGetAvis = new Promise(async (resolve, reject) => {\n          if (!isEmpty(this)) {\n            return resolve({ isLocal: true, message: this.innerHTML.split(/<!--\\?lit\\$\\d+\\$-->/).join('') })\n          }\n\n          const url = new URL(`${contexte}/${niveau}`, service)\n          const response = await fetch(url, {\n            headers: {\n              \"Accept\": \"application/json\",\n              // 'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            signal\n          })\n\n          if (!response.ok) {\n            return reject(new Error(response.status))\n          }\n\n          const { message } = await response.json()\n\n          resolve({ isLocal: false, message })\n        })\n\n        try {\n          const data = await doGetAvis\n          console.log('data: %o', data)\n          await this.#processAvis(data)\n        } catch (error) {\n          console.error('[#getAvis] An error occured: %o', error)\n        }\n\n        return data\n      },\n      args: () => [this.service, this.contexte, this.niveau]\n    })\n  }\n\n  async #processAvis(avis) {\n    if (!avis.message) {\n      this.setMessage(null)\n      return\n    }\n\n    if (!('indexedDB' in window)) {\n      this.setMessage(avis.message)\n      return\n    }\n\n    const db = this.#db = await openDB('@bibudem/ui', 1, {\n      upgrade(db) {\n        // Checks if the object store exists:\n        if (!db.objectStoreNames.contains('avis')) {\n          db.createObjectStore('avis', { keyPath: 'id' })\n        }\n      }\n    })\n\n    try {\n      const id = await hash(avis)\n      const storedAvis = await db.get('avis', id)\n      console.log('storedAvis: ', storedAvis)\n      if (storedAvis) {\n        if (!storedAvis.hidden) {\n          // Delete old entries\n          await db.delete('avis', id)\n          this.#show(storedAvis)\n        }\n      } else {\n        this.#show(avis)\n      }\n    } catch (error) {\n      console.error('Something went wrong with indexedDB: %o', error)\n      this.setMessage(avis.message)\n    }\n  }\n\n  async #show(avis) {\n    this.setMessage(avis)\n    if (this.#db) {\n      const id = await hash(avis)\n      await this.#db.add('avis', { ...avis, hidden: false }, id)\n    }\n  }\n\n  async #hide() {\n    const id = await hash(this.#avis)\n    await this.#db.put('avis', { ...this.#avis, hidden: true }, id)\n    this.#avis = null\n    this.requestUpdate()\n  }\n\n  connectedCallback() {\n    super.connectedCallback()\n    this.#getAvis()\n  }\n\n  #onBtnFermerClick() {\n    this.#hide()\n  }\n\n  _renderBoutonFermer() {\n    return this.boutonFermer ? html`<button class=\"btn-close\" aria-label=\"Fermer\" @click=\"${this.#onBtnFermerClick}\">${unsafeHTML(closeIcon)}</button>` : null\n  }\n\n  _avisTask = new Task(this, {\n    task: async ([service, contexte, niveau], { signal }) => {\n      const url = new URL(`${contexte}/${niveau}`, service)\n      const response = await fetch(url, {\n        headers: {\n          \"Accept\": \"application/json\",\n          // 'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        signal\n      })\n      if (!response.ok) {\n        throw new Error(response.status)\n      }\n      return response.json()\n    },\n    args: () => [this.service, this.contexte, this.niveau]\n  })\n\n  // _renderRemote() {\n  //   return this._avisTask.render({\n  //     pending: () => html``,\n  //     complete: (avis) => this._renderAvis(avis.message),\n  //     error: e => {\n  //       console.error('An error occured while rendering _avisTask: %o', e)\n  //       return null\n  //     }\n  //   })\n  // }\n\n  render() {\n    return this.#avis?.message ? html`<aside class=\"container\"><div class=\"inner\"><div class=\"message\">${unsafeHTML(this.#avis.message)}</div>${this._renderBoutonFermer()}</div></aside>` : null\n  }\n\n  setMessage(message) {\n    this.#avis = typeof message === 'string' ? { message, isLocal: true } : message\n  }\n}\n\ncustomElements.define('bib-avis', BibAvis)","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" height=\\\"24\\\" viewBox=\\\"0 -960 960 960\\\" width=\\\"24\\\"><path d=\\\"M480-424 284-228q-11 11-28 11t-28-11q-11-11-11-28t11-28l196-196-196-196q-11-11-11-28t11-28q11-11 28-11t28 11l196 196 196-196q11-11 28-11t28 11q11 11 11 28t-11 28L536-480l196 196q11 11 11 28t-11 28q-11 11-28 11t-28-11L480-424Z\\\"/></svg>\""],"names":["Directive","_partInfo","_$isConnected","this","_$parent","part","parent","attributeIndex","__part","__attributeIndex","props","update","_part","render","UnsafeHTMLDirective","partInfo","super","_value","nothing","type","Error","constructor","directiveName","value","_templateResult","noChange","strings","raw","_$litType$","resultType","values","unsafeHTML","c","_$litDirective$","instanceOfAny","object","constructors","some","idbProxyableTypes","cursorAdvanceMethods","transactionDoneMap","WeakMap","transformCache","reverseTransformCache","idbProxyTraps","target","prop","receiver","IDBTransaction","get","objectStoreNames","objectStore","wrap","set","has","replaceTraps","callback","IDBRequest","request","promise","Promise","resolve","reject","unlisten","removeEventListener","success","error","result","addEventListener","newValue","func","IDBCursor","prototype","advance","continue","continuePrimaryKey","includes","args","apply","unwrap","tx","done","complete","DOMException","IDBDatabase","IDBObjectStore","IDBIndex","Proxy","readMethods","writeMethods","cachedMethods","Map","getMethod","targetFuncName","replace","useIndex","isWrite","method","async","storeName","transaction","store","index","shift","all","oldTraps","advanceMethodProps","methodMap","advanceResults","ittrProxiedCursorToOriginalProxy","cursorIteratorTraps","cachedFunc","iterate","cursor","openCursor","proxiedCursor","delete","isIteratorProp","Symbol","asyncIterator","isEmpty","node","textContent","trim","hash","obj","utf8","TextEncoder","encode","JSON","stringify","hashBuffer","crypto","subtle","digest","Array","from","Uint8Array","map","bytes","toString","padStart","join","BibAvis","LitElement","static","show","hide","avis","db","_avisTask","Task","task","service","contexte","niveau","signal","url","URL","response","fetch","headers","Accept","ok","status","json","boutonFermer","connectedCallback","html","message","_renderBoutonFermer","isLocal","getAvis","console","log","doGetAvis","innerHTML","split","data","processAvis","setMessage","window","name","version","blocked","upgrade","blocking","terminated","indexedDB","open","openPromise","event","oldVersion","newVersion","then","catch","contains","createObjectStore","keyPath","id","storedAvis","hidden","add","put","requestUpdate","onBtnFermerClick","String","default","Boolean","attribute","state","css","unsafeCSS","customElements","define"],"mappings":"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","x_google_ignoreList":[0,1,2]}