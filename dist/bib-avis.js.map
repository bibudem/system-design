{"version":3,"file":"bib-avis.js","sources":["../node_modules/idb/build/index.js","../src/components/bib-avis/bib-avis.js","../src/icons/close_FILL0_wght400_GRAD0_opsz24.svg?raw"],"sourcesContent":["const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst transactionDoneMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(this.request);\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nconst advanceMethodProps = ['continue', 'continuePrimaryKey', 'advance'];\nconst methodMap = {};\nconst advanceResults = new WeakMap();\nconst ittrProxiedCursorToOriginalProxy = new WeakMap();\nconst cursorIteratorTraps = {\n    get(target, prop) {\n        if (!advanceMethodProps.includes(prop))\n            return target[prop];\n        let cachedFunc = methodMap[prop];\n        if (!cachedFunc) {\n            cachedFunc = methodMap[prop] = function (...args) {\n                advanceResults.set(this, ittrProxiedCursorToOriginalProxy.get(this)[prop](...args));\n            };\n        }\n        return cachedFunc;\n    },\n};\nasync function* iterate(...args) {\n    // tslint:disable-next-line:no-this-assignment\n    let cursor = this;\n    if (!(cursor instanceof IDBCursor)) {\n        cursor = await cursor.openCursor(...args);\n    }\n    if (!cursor)\n        return;\n    cursor = cursor;\n    const proxiedCursor = new Proxy(cursor, cursorIteratorTraps);\n    ittrProxiedCursorToOriginalProxy.set(proxiedCursor, cursor);\n    // Map this double-proxy back to the original, so other cursor methods work.\n    reverseTransformCache.set(proxiedCursor, unwrap(cursor));\n    while (cursor) {\n        yield proxiedCursor;\n        // If one of the advancing methods was not called, call continue().\n        cursor = await (advanceResults.get(proxiedCursor) || cursor.continue());\n        advanceResults.delete(proxiedCursor);\n    }\n}\nfunction isIteratorProp(target, prop) {\n    return ((prop === Symbol.asyncIterator &&\n        instanceOfAny(target, [IDBIndex, IDBObjectStore, IDBCursor])) ||\n        (prop === 'iterate' && instanceOfAny(target, [IDBIndex, IDBObjectStore])));\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get(target, prop, receiver) {\n        if (isIteratorProp(target, prop))\n            return iterate;\n        return oldTraps.get(target, prop, receiver);\n    },\n    has(target, prop) {\n        return isIteratorProp(target, prop) || oldTraps.has(target, prop);\n    },\n}));\n\nexport { deleteDB, openDB, unwrap, wrap };\n","import { Task } from '@lit/task'\nimport { LitElement, html, css, unsafeCSS } from 'lit'\nimport { unsafeHTML } from 'lit/directives/unsafe-html.js'\nimport { openDB } from 'idb'\nimport { name as PKG_NAME } from '../../../package.json'\nimport closeIcon from '../../icons/close_FILL0_wght400_GRAD0_opsz24.svg?raw'\nimport bibAvisStyles from './bib-avis.scss?inline'\n\nconst DB_VERSION = 1\nconst STORE_NAME = 'avis'\n\nfunction isEmpty(node) {\n  return node.textContent.trim() === \"\"\n}\n\nasync function hash(obj) {\n  const utf8 = new TextEncoder().encode(JSON.stringify(obj))\n  const hashBuffer = await crypto.subtle.digest('SHA-256', utf8)\n  const hashArray = Array.from(new Uint8Array(hashBuffer))\n  const hashHex = hashArray\n    .map((bytes) => bytes.toString(16).padStart(2, '0'))\n    .join('')\n  return hashHex\n}\n\n/**\n * Un avis\n * Affiche un avis\n */\nexport class BibAvis extends LitElement {\n  static properties = {\n    service: {\n      type: String\n    },\n    contexte: {\n      type: String,\n      default: 'site-web'\n    },\n    niveau: {\n      type: String\n    },\n    boutonFermer: {\n      type: Boolean,\n      attribute: 'bouton-fermer'\n    },\n    message: {\n      state: true\n    }\n  }\n\n  static styles = [\n    css`${unsafeCSS(bibAvisStyles)}`,\n    css`\n    `\n  ]\n\n  #avis\n  #db\n\n  constructor() {\n    super()\n\n    this.#avis = null\n    this.service = 'https://avis.bib.umontreal.ca'\n    this.contexte = 'site-web-dev'\n    this.niveau = 'important'\n    this.boutonFermer = false\n  }\n\n  #getAvis() {\n    return new Task(this, {\n      task: async ([service, contexte, niveau], { signal }) => {\n\n        const doGetAvis = new Promise(async (resolve, reject) => {\n          if (!isEmpty(this)) {\n            return resolve({ isLocal: true, message: this.innerHTML.split(/<!--\\?lit\\$\\d+\\$-->/).join('') })\n          }\n\n          const url = new URL(`${contexte}/${niveau}`, service)\n          const response = await fetch(url, {\n            headers: {\n              \"Accept\": \"application/json\",\n            },\n            signal\n          })\n\n          if (!response.ok) {\n            return reject(new Error(response.status))\n          }\n\n          const { message } = await response.json()\n\n          resolve({ isLocal: false, message })\n        })\n\n        try {\n          const data = await doGetAvis\n          await this.#processAvis(data)\n        } catch (error) {\n          console.error('[#getAvis] An error occured: %o', error)\n        }\n\n        return data\n      },\n      args: () => [this.service, this.contexte, this.niveau]\n    })\n  }\n\n  async #processAvis(avis) {\n    if (!avis.message) {\n      this.setMessage(null)\n      return\n    }\n\n    if (!('indexedDB' in window)) {\n      this.setMessage(avis.message)\n      return\n    }\n\n    const db = this.#db = await openDB(PKG_NAME, DB_VERSION, {\n      upgrade(db) {\n        // Checks if the object store exists:\n        if (!db.objectStoreNames.contains(STORE_NAME)) {\n          db.createObjectStore(STORE_NAME)\n        }\n      }\n    })\n\n    try {\n      const id = await hash(avis)\n      const storedAvis = await db.get(STORE_NAME, id)\n      if (storedAvis) {\n        if (!storedAvis.hidden) {\n          // Delete old entries\n          await db.delete(STORE_NAME, id)\n          this.#show(storedAvis)\n        }\n      } else {\n        this.#show(avis)\n      }\n    } catch (error) {\n      console.error('Something went wrong with indexedDB: %o', error)\n      this.setMessage(avis.message)\n    }\n  }\n\n  async #show(avis) {\n\n    const canceled = !this.dispatchEvent(new CustomEvent('bib:show', { bubbles: true, cancelable: true }))\n\n    if (canceled) {\n      return\n    }\n\n    this.setMessage(avis)\n\n    if (this.#db) {\n      const id = await hash(avis)\n      await this.#db.put(STORE_NAME, { ...avis, hidden: false }, id)\n    }\n  }\n\n  async #hide() {\n\n    const canceled = !this.dispatchEvent(new CustomEvent('bib:hide', { bubbles: true, cancelable: true }))\n\n    if (canceled) {\n      return\n    }\n\n    const id = await hash(this.#avis)\n    await this.#db.put(STORE_NAME, { ...this.#avis, hidden: true }, id)\n    this.#avis = null\n    this.requestUpdate()\n  }\n\n  connectedCallback() {\n    super.connectedCallback()\n    this.#getAvis()\n  }\n\n  #onBtnFermerClick() {\n    this.#hide()\n  }\n\n  _renderBoutonFermer() {\n    return this.boutonFermer ? html`<button class=\"btn-close\" aria-label=\"Fermer\" @click=\"${this.#onBtnFermerClick}\">${unsafeHTML(closeIcon)}</button>` : null\n  }\n\n  _avisTask = new Task(this, {\n    task: async ([service, contexte, niveau], { signal }) => {\n      const url = new URL(`${contexte}/${niveau}`, service)\n      const response = await fetch(url, {\n        headers: {\n          \"Accept\": \"application/json\",\n          // 'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        signal\n      })\n      if (!response.ok) {\n        throw new Error(response.status)\n      }\n      return response.json()\n    },\n    args: () => [this.service, this.contexte, this.niveau]\n  })\n\n  render() {\n    return this.#avis?.message ? html`<aside class=\"container\"><div class=\"inner\"><div class=\"message\">${unsafeHTML(this.#avis.message)}</div>${this._renderBoutonFermer()}</div></aside>` : null\n  }\n\n  setMessage(message) {\n    this.#avis = typeof message === 'string' ? { message, isLocal: true } : message\n  }\n}\n\ncustomElements.define('bib-avis', BibAvis)","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" height=\\\"24\\\" viewBox=\\\"0 -960 960 960\\\" width=\\\"24\\\"><path d=\\\"M480-424 284-228q-11 11-28 11t-28-11q-11-11-11-28t11-28l196-196-196-196q-11-11-11-28t11-28q11-11 28-11t28 11l196 196 196-196q11-11 28-11t28 11q11 11 11 28t-11 28L536-480l196 196q11 11 11 28t-11 28q-11 11-28 11t-28-11L480-424Z\\\"/></svg>\""],"names":["instanceOfAny","object","constructors","some","c","idbProxyableTypes","cursorAdvanceMethods","transactionDoneMap","WeakMap","transformCache","reverseTransformCache","idbProxyTraps","target","prop","receiver","IDBTransaction","get","objectStoreNames","undefined","objectStore","wrap","set","value","has","replaceTraps","callback","IDBRequest","request","promise","Promise","resolve","reject","unlisten","removeEventListener","success","error","result","addEventListener","newValue","func","IDBCursor","prototype","advance","continue","continuePrimaryKey","includes","args","apply","unwrap","this","tx","done","complete","DOMException","IDBDatabase","IDBObjectStore","IDBIndex","Proxy","readMethods","writeMethods","cachedMethods","Map","getMethod","targetFuncName","replace","useIndex","isWrite","method","async","storeName","transaction","store","index","shift","all","oldTraps","advanceMethodProps","methodMap","advanceResults","ittrProxiedCursorToOriginalProxy","cursorIteratorTraps","cachedFunc","iterate","cursor","openCursor","proxiedCursor","delete","isIteratorProp","Symbol","asyncIterator","STORE_NAME","hash","obj","utf8","TextEncoder","encode","JSON","stringify","hashBuffer","crypto","subtle","digest","Array","from","Uint8Array","map","bytes","toString","padStart","join","BibAvis","LitElement","super","avis","db","_avisTask","Task","task","service","contexte","niveau","signal","url","URL","response","fetch","headers","Accept","ok","Error","status","json","boutonFermer","connectedCallback","html","unsafeHTML","message","_renderBoutonFermer","isLocal","getAvis","doGetAvis","textContent","trim","innerHTML","split","data","console","processAvis","setMessage","window","name","version","blocked","upgrade","blocking","terminated","indexedDB","open","openPromise","event","oldVersion","newVersion","then","catch","contains","createObjectStore","id","storedAvis","hidden","show","dispatchEvent","CustomEvent","bubbles","cancelable","put","hide","requestUpdate","onBtnFermerClick","static","type","String","default","Boolean","attribute","state","css","unsafeCSS","customElements","define"],"mappings":"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","x_google_ignoreList":[0]}